<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Moon</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wazxser.github.io/"/>
  <updated>2019-12-01T09:05:50.415Z</updated>
  <id>https://wazxser.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 72. Edit Distance</title>
    <link href="https://wazxser.github.io/2019/12/01/Leetcode-72/"/>
    <id>https://wazxser.github.io/2019/12/01/Leetcode-72/</id>
    <published>2019-12-01T08:57:04.000Z</published>
    <updated>2019-12-01T09:05:50.415Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/edit-distance/" target="_blank" rel="noopener">https://leetcode.com/problems/edit-distance/</a></p><p>递归：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int minDistance(string word1, string word2) &#123;</span><br><span class="line">        <span class="keyword">if</span>(word1.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> word2.size();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(word2.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> word1.size();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int m = word1.size();</span><br><span class="line">        int n = word2.size();</span><br><span class="line">        </span><br><span class="line">        vector&lt;vector&lt;int&gt; &gt; arr(m, vector&lt;int&gt;(n, <span class="number">0</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dfs(word1, <span class="number">0</span>, word2, <span class="number">0</span>, arr);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    int dfs(string &amp; word1, int i, string &amp; word2, int j, vector&lt;vector&lt;int&gt; &gt; &amp; arr)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == word1.size())</span><br><span class="line">            <span class="keyword">return</span> word2.size() - j;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(j == word2.size())</span><br><span class="line">            <span class="keyword">return</span> word1.size() - i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(arr[i][j])</span><br><span class="line">            <span class="keyword">return</span> arr[i][j];</span><br><span class="line">        </span><br><span class="line">        int res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(word1[i] == word2[j])&#123;</span><br><span class="line">            <span class="keyword">return</span> dfs(word1, i+<span class="number">1</span>, word2, j+<span class="number">1</span>, arr);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            int insert_cnt = dfs(word1, i, word2, j+<span class="number">1</span>, arr);</span><br><span class="line">            int delete_cnt = dfs(word1, i+<span class="number">1</span>, word2, j, arr);</span><br><span class="line">            int replace_cnt = dfs(word1, i+<span class="number">1</span>, word2, j+<span class="number">1</span>, arr);</span><br><span class="line">            </span><br><span class="line">            res = min(insert_cnt, min(delete_cnt, replace_cnt)) + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        arr[i][j] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>动态规划<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int minDistance(string word1, string word2) &#123;</span><br><span class="line">        <span class="keyword">if</span>(word1.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> word2.size();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(word2.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> word1.size();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int m = word1.size();</span><br><span class="line">        int n = word2.size();</span><br><span class="line">        </span><br><span class="line">        vector&lt;vector&lt;int&gt; &gt; dp(m+<span class="number">1</span>, vector&lt;int&gt;(n+<span class="number">1</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">            dp[i][<span class="number">0</span>] = i;</span><br><span class="line">        <span class="keyword">for</span>(int j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">            dp[<span class="number">0</span>][j] = j;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(int j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(word1[i - <span class="number">1</span>] == word2[j - <span class="number">1</span>])&#123;</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i][j] = min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>], min(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>])) + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/edit-distance/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/edit-distance/&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 42. Trapping Rain Water</title>
    <link href="https://wazxser.github.io/2019/12/01/Leetcode-42/"/>
    <id>https://wazxser.github.io/2019/12/01/Leetcode-42/</id>
    <published>2019-12-01T08:25:31.000Z</published>
    <updated>2019-12-01T08:38:41.473Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/trapping-rain-water/" target="_blank" rel="noopener">https://leetcode.com/problems/trapping-rain-water/</a></p><p>第一种解法是单调栈</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int trap(vector&lt;int&gt;&amp; height) &#123;</span><br><span class="line">        // 边界情况判定</span><br><span class="line">        <span class="keyword">if</span>(height.size() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        stack&lt;int&gt; s;</span><br><span class="line">        int res = <span class="number">0</span>;</span><br><span class="line">        int cur = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur &lt; height.size())&#123;</span><br><span class="line">            //栈内的元素是单调递增的</span><br><span class="line">            <span class="keyword">while</span>(!s.empty() &amp;&amp; height[cur] &gt; height[s.top()])&#123;</span><br><span class="line">                // 当遍历的到元素比当前栈顶元素值大时，计算此时的蓄水量</span><br><span class="line">                int top = s.top();</span><br><span class="line">                s.pop();</span><br><span class="line">                <span class="keyword">if</span>(s.empty())&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                int dist = cur - s.top() - <span class="number">1</span>;</span><br><span class="line">                int bound = min(height[cur], height[s.top()]) - height[top];</span><br><span class="line">                </span><br><span class="line">                res += dist * bound;</span><br><span class="line">            &#125;</span><br><span class="line">            s.push(cur++);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>第二种解法是双指针</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int trap(vector&lt;int&gt;&amp; height) &#123;</span><br><span class="line">        <span class="keyword">if</span>(height.size() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int res = <span class="number">0</span>;</span><br><span class="line">        int length = height.size();</span><br><span class="line">        // 分别从头和尾开始的指针</span><br><span class="line">        int left = <span class="number">0</span>, right = length - <span class="number">1</span>;</span><br><span class="line">        int left_max = <span class="number">0</span>, right_max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">            <span class="keyword">if</span>(height[left] &lt; height[right])&#123;</span><br><span class="line">                height[left] &gt;= left_max ? left_max = height[left] : res += left_max - height[left];</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                height[right] &gt;= right_max ? right_max = height[right] : res += right_max - height[right];</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/trapping-rain-water/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/trapping-rain-w
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>2019_被3整除</title>
    <link href="https://wazxser.github.io/2019/11/04/2019-%E8%A2%AB3%E6%95%B4%E9%99%A4/"/>
    <id>https://wazxser.github.io/2019/11/04/2019-被3整除/</id>
    <published>2019-11-04T13:35:35.000Z</published>
    <updated>2019-11-04T13:40:08.572Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nowcoder.com/practice/51dcb4eef6004f6f8f44d927463ad5e8?tpId=98&amp;tqId=32825&amp;tPage=1&amp;rp=1&amp;ru=/ta/2019test&amp;qru=/ta/2019test/question-ranking" target="_blank" rel="noopener">https://www.nowcoder.com/practice/51dcb4eef6004f6f8f44d927463ad5e8?tpId=98&amp;tqId=32825&amp;tPage=1&amp;rp=1&amp;ru=/ta/2019test&amp;qru=/ta/2019test/question-ranking</a></p><p>如果一个数各个位上的数字之和能被3整除，那么这个数就能被3整除<br>严格来水，应该是求每位数字相加的和，但是这样做会复杂度过大，通过率70%<br>下面的代码是将组成该数字的每个字符串的数字相加，可以通过，不懂原因<br>还有各种找规律的解法。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">long long num(int i)&#123;</span><br><span class="line">    long long sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i)&#123;</span><br><span class="line">        sum += i % <span class="number">10</span>;</span><br><span class="line">        i = i / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int l, r;</span><br><span class="line">    scanf(<span class="string">"%d %d"</span>, &amp;l, &amp;r);</span><br><span class="line">    int res = <span class="number">0</span>;</span><br><span class="line">    long long sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(int i = <span class="number">1</span>; i &lt; l; i++)&#123;</span><br><span class="line">        sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(int i = l; i &lt;= r; i++)&#123;</span><br><span class="line">        sum += i;</span><br><span class="line">        <span class="keyword">if</span>(!(sum % <span class="number">3</span>))&#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printf(<span class="string">"%d\n"</span>, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/practice/51dcb4eef6004f6f8f44d927463ad5e8?tpId=98&amp;amp;tqId=32825&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=/ta/2019te
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="nowcoder" scheme="https://wazxser.github.io/tags/nowcoder/"/>
    
  </entry>
  
  <entry>
    <title>Hdu 2045. 涂色问题</title>
    <link href="https://wazxser.github.io/2019/11/03/Hdu-2045/"/>
    <id>https://wazxser.github.io/2019/11/03/Hdu-2045/</id>
    <published>2019-11-03T14:26:39.000Z</published>
    <updated>2019-11-03T14:28:11.907Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2045" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2045</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"></span><br><span class="line">//题意：三种颜色涂色，相邻不同颜色，首尾不同色，多少种涂色方案</span><br><span class="line">//看成一个环，相邻不同色</span><br><span class="line"></span><br><span class="line">typedef long long ll;</span><br><span class="line">ll dp[<span class="number">55</span>];</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">3</span>;</span><br><span class="line">    dp[<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line">    dp[<span class="number">3</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i = <span class="number">4</span>; i &lt; <span class="number">55</span>; i++)&#123;</span><br><span class="line">        dp[i] = dp[i<span class="number">-1</span>] + <span class="number">2</span>*dp[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int n;</span><br><span class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        printf(<span class="string">"%lld\n"</span>, dp[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2045&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://acm.hdu.edu.cn/showproblem.php?pid=2045&lt;/a
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="hdu" scheme="https://wazxser.github.io/tags/hdu/"/>
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 413. Arithmetic Slices</title>
    <link href="https://wazxser.github.io/2019/11/03/Leetcode-413/"/>
    <id>https://wazxser.github.io/2019/11/03/Leetcode-413/</id>
    <published>2019-11-03T07:25:20.000Z</published>
    <updated>2019-11-03T09:22:24.765Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/arithmetic-slices/" target="_blank" rel="noopener">https://leetcode.com/problems/arithmetic-slices/</a></p><p>题意：给定一个数组，求该数组中等差数列的子数组的个数</p><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int numberOfArithmeticSlices(vector&lt;int&gt;&amp; A) &#123;</span><br><span class="line">        <span class="keyword">if</span>(A.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int res = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">2</span>; i &lt; A.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(A[i] - A[i<span class="number">-1</span>] == A[i<span class="number">-1</span>] - A[i<span class="number">-2</span>])&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                res += cnt;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                cnt = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/arithmetic-slices/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/arithmetic-slices
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="medium" scheme="https://wazxser.github.io/tags/medium/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 446. Arithmetic Slices II - Subsequence</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-446/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-446/</id>
    <published>2019-10-24T08:01:16.000Z</published>
    <updated>2019-11-03T14:10:59.896Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/arithmetic-slices-ii-subsequence/" target="_blank" rel="noopener">https://leetcode.com/problems/arithmetic-slices-ii-subsequence/</a></p><p>题意：求一个数组中能够组成等差数列的的组合的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int numberOfArithmeticSlices(vector&lt;int&gt;&amp; A) &#123;</span><br><span class="line">        int res = <span class="number">0</span>, size = A.size();</span><br><span class="line">        vector&lt;unordered_map&lt;int, int&gt; &gt; dp(size);</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(int j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">                long delta = (long) A[i] - (long) A[j];</span><br><span class="line">                <span class="keyword">if</span>(delta &gt; INT_MAX || delta &lt; INT_MIN)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                int diff = (int) delta;</span><br><span class="line">                ++dp[i][diff];</span><br><span class="line">                <span class="keyword">if</span>(dp[j].count(diff))&#123;</span><br><span class="line">                    res += dp[j][diff];</span><br><span class="line">                    dp[i][diff] += dp[j][diff];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/arithmetic-slices-ii-subsequence/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/ar
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="medium" scheme="https://wazxser.github.io/tags/medium/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 678. Valid Parenthesis String</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-678/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-678/</id>
    <published>2019-10-24T08:01:10.000Z</published>
    <updated>2019-11-02T02:56:17.288Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/valid-parenthesis-string/" target="_blank" rel="noopener">https://leetcode.com/problems/valid-parenthesis-string/</a></p><p>题意：括号匹配，增加了星号可以作为左括号、右括号或者星号</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    bool checkValidString(string s) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> true;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; s.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">'('</span> || s[i] == <span class="string">'*'</span>)</span><br><span class="line">                left++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                left--;</span><br><span class="line">            <span class="keyword">if</span>(left &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(left == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> true;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(int i = s.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">')'</span> || s[i] == <span class="string">'*'</span>)</span><br><span class="line">                right++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                right--;</span><br><span class="line">            <span class="keyword">if</span>(right &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>下面这个代码真的好难理解，一个人刷题太难了，心累。。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    bool checkValidString(string s) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> true;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; s.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">'('</span>)&#123;</span><br><span class="line">                left++;</span><br><span class="line">                right++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">')'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(left &gt; <span class="number">0</span>)</span><br><span class="line">                    left--;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(left &gt; <span class="number">0</span>)</span><br><span class="line">                    left--;</span><br><span class="line">                right++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(right &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> left == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/valid-parenthesis-string/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/valid-pare
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="medium" scheme="https://wazxser.github.io/tags/medium/"/>
    
      <category term="string" scheme="https://wazxser.github.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 132. Palindrome Partitioning II</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-132/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-132/</id>
    <published>2019-10-24T08:01:04.000Z</published>
    <updated>2019-11-08T08:09:07.597Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/palindrome-partitioning-ii/" target="_blank" rel="noopener">https://leetcode.com/problems/palindrome-partitioning-ii/</a></p><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int minCut(string s) &#123;</span><br><span class="line">        int n = s.size();</span><br><span class="line">        <span class="keyword">if</span>(!n)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;vector&lt;bool&gt;&gt; judge(n, vector&lt;bool&gt;(n, false));</span><br><span class="line">        vector&lt;int&gt; dp(n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            dp[i] = i;</span><br><span class="line">            <span class="keyword">for</span>(int j = <span class="number">0</span>; j &lt;= i; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[j] == s[i] &amp;&amp; (i - j &lt;= <span class="number">2</span> || judge[j+<span class="number">1</span>][i<span class="number">-1</span>]))&#123;</span><br><span class="line">                    judge[j][i] = true;</span><br><span class="line">                    dp[i] = (j == 0) ? 0 : min(dp[i], dp[j-1] + 1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">                   </span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/palindrome-partitioning-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/palindro
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 437. Path Sum III</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-437/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-437/</id>
    <published>2019-10-24T08:00:59.000Z</published>
    <updated>2019-11-09T07:30:12.418Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/path-sum-iii/" target="_blank" rel="noopener">https://leetcode.com/problems/path-sum-iii/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition <span class="keyword">for</span> a binary tree node.</span><br><span class="line"> * struct TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode *left;</span><br><span class="line"> *     TreeNode *right;</span><br><span class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span><br><span class="line"> * &#125;;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int pathSum(TreeNode* root, int sum) &#123;</span><br><span class="line">        int res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        int temp = <span class="number">0</span>;</span><br><span class="line">        dfs(root, sum, res, temp);</span><br><span class="line">        </span><br><span class="line">        res += pathSum(root-&gt;left, sum) + pathSum(root-&gt;right, sum);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    void dfs(TreeNode * root, int &amp; sum, int &amp; res, int temp)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        temp += root-&gt;val;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(temp == sum)&#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        dfs(root-&gt;left, sum, res, temp);</span><br><span class="line">        dfs(root-&gt;right, sum, res, temp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/path-sum-iii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/path-sum-iii/&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="Tree" scheme="https://wazxser.github.io/tags/Tree/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_992</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-992/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-992/</id>
    <published>2019-10-24T08:00:53.000Z</published>
    <updated>2019-10-24T08:00:53.964Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Leetcode 122. Best Time to Buy and Sell Stock II</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-122/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-122/</id>
    <published>2019-10-24T08:00:48.000Z</published>
    <updated>2019-10-24T12:38:38.470Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProfit</span><span class="params">(self, prices)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type prices: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> sum(max(prices[i + <span class="number">1</span>] - prices[i], <span class="number">0</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(prices) - <span class="number">1</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 45. Jump Game II</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-45/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-45/</id>
    <published>2019-10-24T08:00:09.000Z</published>
    <updated>2019-11-08T08:23:53.111Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/jump-game-ii/" target="_blank" rel="noopener">https://leetcode.com/problems/jump-game-ii/</a></p><p>题意：给一个数组，数组中每个字都是可以跳跃的最大步数，问到达数组末端所需要的最小步数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int jump(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        int res= <span class="number">0</span>;</span><br><span class="line">        int cur = <span class="number">0</span>;</span><br><span class="line">        int pre = <span class="number">0</span>;</span><br><span class="line">        int n = nums.size();</span><br><span class="line">        int i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur &lt; n<span class="number">-1</span>)&#123;</span><br><span class="line">            pre = cur;</span><br><span class="line">            res++;</span><br><span class="line">            <span class="keyword">for</span>(; i &lt;= pre; i++)&#123;</span><br><span class="line">                cur = max(cur, nums[i]+i);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(cur == pre)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/jump-game-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/jump-game-ii/&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_215</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-215/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-215/</id>
    <published>2019-10-24T07:59:39.000Z</published>
    <updated>2019-10-24T07:59:39.956Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Leetcode 9. Palindrome Number</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-9/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-9/</id>
    <published>2019-10-24T07:59:35.000Z</published>
    <updated>2019-10-24T12:34:18.123Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/palindrome-number/" target="_blank" rel="noopener">https://leetcode.com/problems/palindrome-number/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        num = str(x)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(num)/<span class="number">2</span>):</span><br><span class="line">            <span class="keyword">if</span> num[i] != num[len(num)<span class="number">-1</span>-i]:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    bool isPalindrome(int x) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        string str = to_string(x);</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; str.size() / <span class="number">2</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i] != str[str.size()<span class="number">-1</span>-i])&#123;</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/palindrome-number/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/palindrome-number
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_32</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-32/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-32/</id>
    <published>2019-10-24T07:59:26.000Z</published>
    <updated>2019-10-24T07:59:26.698Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Leetcode 124. Binary Tree Maximum Path Sum</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-124/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-124/</id>
    <published>2019-10-24T07:58:50.000Z</published>
    <updated>2019-10-24T12:19:31.865Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition <span class="keyword">for</span> a binary tree node.</span><br><span class="line"> * struct TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode *left;</span><br><span class="line"> *     TreeNode *right;</span><br><span class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span><br><span class="line"> * &#125;;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int maxPathSum(TreeNode* root) &#123;</span><br><span class="line">        int res = INT_MIN;</span><br><span class="line">        dfs(root, res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    int dfs(TreeNode * root, int &amp; res)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!root)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        int left = max(dfs(root-&gt;left, res), 0);</span><br><span class="line">        int right = max(dfs(root-&gt;right, res), 0);</span><br><span class="line">        </span><br><span class="line">        res = max(res, left+right+root-&gt;val);</span><br><span class="line">        return max(left, right) + root-&gt;val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="Tree" scheme="https://wazxser.github.io/tags/Tree/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
      <category term="more solutions" scheme="https://wazxser.github.io/tags/more-solutions/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 70. Climbing Stairs</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-70/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-70/</id>
    <published>2019-10-24T07:58:43.000Z</published>
    <updated>2019-10-24T12:16:18.004Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode.com/problems/climbing-stairs/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">climbStairs</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        dp = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> xrange(n+<span class="number">1</span>)]</span><br><span class="line">        </span><br><span class="line">        dp[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">            dp[<span class="number">2</span>] = <span class="number">2</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>, n+<span class="number">1</span>):</span><br><span class="line">                dp[i] = dp[i<span class="number">-1</span>] + dp[i<span class="number">-2</span>]</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/climbing-stairs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/climbing-stairs/&lt;/a
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="DP" scheme="https://wazxser.github.io/tags/DP/"/>
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 149. Max Points on a Line</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-149/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-149/</id>
    <published>2019-10-24T07:58:40.000Z</published>
    <updated>2019-10-24T12:15:13.541Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/max-points-on-a-line/" target="_blank" rel="noopener">https://leetcode.com/problems/max-points-on-a-line/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/max-points-on-a-line/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/max-points-on-
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="hard" scheme="https://wazxser.github.io/tags/hard/"/>
    
      <category term="more solutions" scheme="https://wazxser.github.io/tags/more-solutions/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 14. Longest Common Prefix</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-14/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-14/</id>
    <published>2019-10-24T07:58:26.000Z</published>
    <updated>2019-10-24T12:08:44.388Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/longest-common-prefix/" target="_blank" rel="noopener">https://leetcode.com/problems/longest-common-prefix/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type strs: List[str]</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) &gt; <span class="number">0</span>:</span><br><span class="line">            res = strs[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> str <span class="keyword">in</span> strs:</span><br><span class="line">                temp = <span class="string">''</span></span><br><span class="line">                num = min(len(res), len(str))</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> xrange(num):</span><br><span class="line">                    <span class="keyword">if</span> res[i] != str[i]:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    temp += res[i]</span><br><span class="line">                res = temp</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/longest-common-prefix/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/longest-commo
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
      <category term="string" scheme="https://wazxser.github.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 771. Jewels and Stones</title>
    <link href="https://wazxser.github.io/2019/10/24/Leetcode-771/"/>
    <id>https://wazxser.github.io/2019/10/24/Leetcode-771/</id>
    <published>2019-10-24T07:58:18.000Z</published>
    <updated>2019-10-24T12:06:30.564Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/jewels-and-stones/" target="_blank" rel="noopener">https://leetcode.com/problems/jewels-and-stones/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int numJewelsInStones(string J, string S) &#123;</span><br><span class="line">        int res = <span class="number">0</span>;</span><br><span class="line">        vector&lt;char&gt; arr;</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; J.size(); i++)&#123;</span><br><span class="line">            arr.push_back(J[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; S.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count(arr.begin(), arr.end(), S[i]))&#123;</span><br><span class="line">                res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/jewels-and-stones/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/jewels-and-stones
      
    
    </summary>
    
      <category term="Online Judge" scheme="https://wazxser.github.io/categories/Online-Judge/"/>
    
    
      <category term="leetcode" scheme="https://wazxser.github.io/tags/leetcode/"/>
    
      <category term="easy" scheme="https://wazxser.github.io/tags/easy/"/>
    
      <category term="string" scheme="https://wazxser.github.io/tags/string/"/>
    
  </entry>
  
</feed>
